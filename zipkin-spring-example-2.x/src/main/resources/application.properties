server.port=9999
spring.application.name=zipkin-test-2.x
management.security.enabled=false
management.endpoints.web.exposure.include=*

spring.zipkin.enabled=true
spring.sleuth.web.client.enabled=true
spring.sleuth.sampler.probability=1.0

#########################
# zipkin http sender
#########################
spring.zipkin.base-url=http://127.0.0.1:9411

#########################
# zipkin kafka sender
#########################
spring.zipkin.sender.type=kafka
spring.kafka.bootstrapServers=127.0.0.1:9092

#########################
# mysql config
#########################
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mysql?useSSL=false&queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor&zipkinServiceName=mysql-zipkin-test
spring.datasource.username=root
spring.datasource.password=ruan


#########################
# alibaba druid config
#########################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#druid pool standard config
spring.datasource.druid.max-active=24
spring.datasource.druid.initial-size=3
spring.datasource.druid.min-idle=3
spring.datasource.druid.max-wait=12000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=30000
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=30

spring.datasource.druid.validation-query=select 1 from dual
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false

#druid extends config
#druid sql firewall monitor
spring.datasource.druid.filter.wall.enabled=true

#druid sql monitor
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=10000
spring.datasource.druid.filter.stat.merge-sql=true

#druid uri monitor
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*

#druid session monitor
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.profile-enable=true

#druid spring monitor package config
spring.datasource.druid.aop-patterns=org.axc.*

#druid login user config
spring.datasource.druid.stat-view-servlet.login-username=root
spring.datasource.druid.stat-view-servlet.login-password=ruan

########################
# kafka producer config
########################
kafka.producer[bootstrap.servers]=127.0.0.1:9092
kafka.producer[acks]=all
kafka.producer[retries]=1
kafka.producer[batch.size]=16384
kafka.producer[linger.ms]=100
kafka.producer[buffer.memory]=40960
kafka.producer[key.serializer]=org.apache.kafka.common.serialization.StringSerializer
kafka.producer[value.serializer]=org.apache.kafka.common.serialization.StringSerializer
kafka.producer[test.topic]=zipkin-kafka-test

########################
# kafka consumer config
########################
kafka.consumer[bootstrap.servers]=127.0.0.1:9092
kafka.consumer[auto.commit.interval.ms]=1000
kafka.consumer[auto.offset.reset]=earliest
kafka.consumer[key.deserializer]=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer[value.deserializer]=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer[test.topic]=zipkin-kafka-test
kafka.consumer[group.id]=ruan_zipkin
